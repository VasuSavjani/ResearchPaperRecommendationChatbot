# -*- coding: utf-8 -*-
"""AI_Project_D35_&_D30.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R2DUYOQd2R23vVvwL86d4z9LpqqA32no
"""

!pip install sentence_transformers

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sentence_transformers import SentenceTransformer
from numpy.linalg import norm


model = SentenceTransformer('all-MiniLM-L6-v2')

# Load the dataset
dataset = pd.read_csv('/content/convertcsv.csv')

paper_abstracts = dataset['abstract'].values.tolist()

encoded_abstracts = model.encode(paper_abstracts)

def recommend_paper(query):
    encoded_query = model.encode(query)

    similarities = np.dot(encoded_abstracts, encoded_query) / (norm(encoded_abstracts) * norm(encoded_query))

    most_similar_paper_index = np.argmax(similarities)

    paper_title = dataset['title'].iloc[most_similar_paper_index]
    paper_submitter = dataset['submitter'].iloc[most_similar_paper_index]
    paper_authors = dataset['authors'].iloc[most_similar_paper_index]
    return f"\nTitle: {paper_title}\nSubmitter: {paper_submitter}\nAuthors: {paper_authors}\n\n"

def respond_to_input(input_text):
    input_text = input_text.lower()

    if "recommend" in input_text:
        query = input_text.split("recommend ")[1]
        return "\nI recommend the following paper:\n" + recommend_paper(query)
    else:
        return "I'm sorry, I didn't understand what you said.\n\n"

def run_chatbot():
    print("Hello! I'm a research paper recommendation chatbot. How can I help you? (Note: Use recommend before search)")
    while True:
        user_input = input(">")
        response = respond_to_input(user_input)
        print(response)

run_chatbot()